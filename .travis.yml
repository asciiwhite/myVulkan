language: cpp
sudo: required
dist: trusty

matrix:
  # Show final status immediately if a test fails.
  fast_finish: true
  include:
    # Linux GCC debug build.
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - BUILD_TYPE=DEFAULT
    # Linux clang debug build.
    - os: linux
      compiler: clang
      env: BUILD_TYPE=DEFAULT
    #Linux gcc coverage build.
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - BUILD_TYPE=COVERAGE

# Use set -e so that the build fails when a command fails.
# The default action for Travis-CI is to continue running even if a command fails.
# See https://github.com/travis-ci/travis-ci/issues/1066.
# Use the YAML block scalar header (|) to allow easier multiline script coding.

before_install:
    - eval "${MATRIX_EVAL}"

install:
  - sudo apt-get -qq update
  - sudo apt-get install -y libxinerama-dev libxcursor-dev libxi-dev libassimp-dev libglm-dev graphviz libxcb-dri3-0 libxcb-present0 libpciaccess0 libpng-dev libxcb-dri3-dev libx11-dev libx11-xcb-dev libmirclient-dev libwayland-dev libxrandr-dev lcov
  - VULKAN_VERSION=1.1.106.0
  - VULKAN_SDK_FILE=vulkansdk-linux-x86_64-$VULKAN_VERSION.tar.gz
  - wget -O VulkanSDK.tar.gz https://sdk.lunarg.com/sdk/download/$VULKAN_VERSION/linux/$VULKAN_SDK_FILE
  - tar xvf VulkanSDK.tar.gz
  - export VULKAN_SDK=$TRAVIS_BUILD_DIR/$VULKAN_VERSION/x86_64
  - export core_count=$(nproc || echo 4) && echo core_count = $core_count
  - mkdir -p deps && cd deps
  - travis_retry wget --no-check-certificate --quiet -O - https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz | tar --strip-components=1 -xz
  - export PATH=${TRAVIS_BUILD_DIR}/deps/bin:${PATH}
  - cd -

# Specify a display with xvfb for window creation / testing
before_script:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start

script:
  - set -ev
  - |
    if [[ "$BUILD_TYPE" == "DEFAULT" ]]; then
      cmake .
      cmake --build . -- -j $core_count
      ctest --output-on-failure
    fi
  - |
    if [[ "$BUILD_TYPE" == "COVERAGE" ]]; then
      cmake . -DENABLE_COVERAGE=On
      make vulkanBaseUnitTests -j $core_count
      ctest --output-on-failure
      make lcov
    fi
  - set +ev

notifications:
  email:
    recipients:
      - serialize.this@gmail.com
    on_success: never
    on_failure: never