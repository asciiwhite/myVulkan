#version 450

#extension GL_ARB_separate_shader_objects : enable

layout(std430, binding = 0) buffer Height
{
   float height[];
};

layout(std140, binding = 1) uniform Input
{
   int tilesPerDim;
   float time;
};

#define WORKGROUP_SIZE 32

layout (local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE) in;

float evaluate(ivec2 center, float heightScale, float frequencyScale)
{
    float dx = float(gl_GlobalInvocationID.x) - center.x;
    float dy = float(gl_GlobalInvocationID.y) - center.y;
    float d = sqrt(dx * dx + dy * dy);
    return heightScale * (sin(d * frequencyScale - time) + 1.0);
}

void main() 
{
    if(gl_GlobalInvocationID.x >= tilesPerDim || gl_GlobalInvocationID.y >= tilesPerDim)
        return;

    float newHeight = 0;

    newHeight += evaluate(ivec2(tilesPerDim / 1.5, tilesPerDim / 1.5), 5.0, 0.2);
    newHeight += evaluate(ivec2(tilesPerDim / 1.5, tilesPerDim / 3.0), 2.0, 0.4);
    newHeight += evaluate(ivec2(tilesPerDim / 3.0, tilesPerDim / 3.0), 3.0, 0.5);

    height[tilesPerDim * gl_GlobalInvocationID.y + gl_GlobalInvocationID.x] = newHeight;
}